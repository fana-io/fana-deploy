{
 "Resources": {
  "fanaServiceTaskDefinitionTaskRoleAF78110E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fanaServiceTaskDefinition/TaskRole/Resource"
   }
  },
  "fanaServiceTaskDefinition7714E28D": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "PORT",
        "Value": "3000"
       },
       {
        "Name": "REDIS_DB",
        "Value": "0"
       },
       {
        "Name": "REDIS_HOST",
        "Value": {
         "Fn::ImportValue": "fana-shared-resources:ExportsOutputFnGetAttfanaredistestfanaredistestclusterD26287DDRedisEndpointAddressA128D182"
        }
       },
       {
        "Name": "REDIS_PORT",
        "Value": {
         "Fn::ImportValue": "fana-shared-resources:ExportsOutputFnGetAttfanaredistestfanaredistestclusterD26287DDRedisEndpointPortB1ABE103"
        }
       },
       {
        "Name": "DB_HOST",
        "Value": {
         "Fn::ImportValue": "fana-shared-resources:ExportsOutputFnGetAttfanaDBA214E5A4EndpointAddressB31405B0"
        }
       },
       {
        "Name": "DB_PORT",
        "Value": {
         "Fn::ImportValue": "fana-shared-resources:ExportsOutputFnGetAttfanaDBA214E5A4EndpointPortA2F54514"
        }
       },
       {
        "Name": "DB_PW",
        "Value": "postgres"
       },
       {
        "Name": "DB_USER",
        "Value": "postgres"
       },
       {
        "Name": "DB_NAME",
        "Value": "postgres"
       },
       {
        "Name": "SECS_TO_EXPIRE",
        "Value": "1000000s"
       }
      ],
      "Essential": true,
      "Image": "public.ecr.aws/n8w7n3f6/fana-manager-static",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "fanaServiceTaskDefinitionfanaManagerContainerLogGroupD5F3C988"
        },
        "awslogs-stream-prefix": "fanaManager",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "fanaManagerContainer",
      "PortMappings": [
       {
        "ContainerPort": 3000,
        "HostPort": 3000,
        "Protocol": "tcp"
       }
      ]
     },
     {
      "Environment": [
       {
        "Name": "REDIS_HOST",
        "Value": {
         "Fn::ImportValue": "fana-shared-resources:ExportsOutputFnGetAttfanaredistestfanaredistestclusterD26287DDRedisEndpointAddressA128D182"
        }
       },
       {
        "Name": "REDIS_PORT",
        "Value": {
         "Fn::ImportValue": "fana-shared-resources:ExportsOutputFnGetAttfanaredistestfanaredistestclusterD26287DDRedisEndpointPortB1ABE103"
        }
       },
       {
        "Name": "MANAGER_URI",
        "Value": "http://localhost:3000"
       },
       {
        "Name": "PORT",
        "Value": "3001"
       }
      ],
      "Essential": false,
      "Image": "public.ecr.aws/n8w7n3f6/fana-flag-bearer",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "fanaServiceTaskDefinitionfanaBearerContainerLogGroupE940E436"
        },
        "awslogs-stream-prefix": "fanaBearer",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "fanaBearerContainer",
      "PortMappings": [
       {
        "ContainerPort": 3001,
        "HostPort": 3001,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "1024",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "fanaServiceTaskDefinitionExecutionRoleF4709807",
      "Arn"
     ]
    },
    "Family": "FanaPlatformStackfanaServiceTaskDefinition27FC980B",
    "Memory": "3072",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "fanaServiceTaskDefinitionTaskRoleAF78110E",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fanaServiceTaskDefinition/Resource"
   }
  },
  "fanaServiceTaskDefinitionfanaManagerContainerLogGroupD5F3C988": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fanaServiceTaskDefinition/fanaManagerContainer/LogGroup/Resource"
   }
  },
  "fanaServiceTaskDefinitionExecutionRoleF4709807": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fanaServiceTaskDefinition/ExecutionRole/Resource"
   }
  },
  "fanaServiceTaskDefinitionExecutionRoleDefaultPolicy410C786E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "fanaServiceTaskDefinitionfanaBearerContainerLogGroupE940E436",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "fanaServiceTaskDefinitionfanaManagerContainerLogGroupD5F3C988",
          "Arn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "fanaServiceTaskDefinitionExecutionRoleDefaultPolicy410C786E",
    "Roles": [
     {
      "Ref": "fanaServiceTaskDefinitionExecutionRoleF4709807"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fanaServiceTaskDefinition/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "fanaServiceTaskDefinitionfanaBearerContainerLogGroupE940E436": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fanaServiceTaskDefinition/fanaBearerContainer/LogGroup/Resource"
   }
  },
  "fanaserviceSG30294B9D": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Allow connections to Postgres and Redis DBs.",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "fana-shared-resources:ExportsOutputReffanavpc71F92CF5BBA8AEF7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fana-service-SG/Resource"
   }
  },
  "fanaserviceSGfanasharedresourcesfanaDBSecurityGroup37B2B9925432to3820BD3A": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "To RDS instance",
    "FromPort": 5432,
    "GroupId": {
     "Fn::ImportValue": "fana-shared-resources:ExportsOutputFnGetAttfanaDBSecurityGroupC50F2AF4GroupId38F92506"
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "fanaserviceSG30294B9D",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fana-service-SG/fanasharedresourcesfanaDBSecurityGroup37B2B992:5432 to"
   }
  },
  "fanaserviceSGfanasharedresourcesfanaredistestSGfanaredistest4DCF18746379to77C35757": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "To Redis instance",
    "FromPort": 6379,
    "GroupId": {
     "Fn::ImportValue": "fana-shared-resources:ExportsOutputFnGetAttfanaredistestSGfanaredistest8F8EE3FCGroupIdEEC67E99"
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "fanaserviceSG30294B9D",
      "GroupId"
     ]
    },
    "ToPort": 6379
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fana-service-SG/fanasharedresourcesfanaredistestSGfanaredistest4DCF1874:6379 to"
   }
  },
  "fanaserviceSGfromFanaPlatformStackfanaserviceLBSecurityGroup3F47A2293000254FEB32": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "FromPort": 3000,
    "GroupId": {
     "Fn::GetAtt": [
      "fanaserviceSG30294B9D",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "fanaserviceLBSecurityGroup1E8FAB95",
      "GroupId"
     ]
    },
    "ToPort": 3000
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fana-service-SG/from FanaPlatformStackfanaserviceLBSecurityGroup3F47A229:3000"
   }
  },
  "fanaserviceSGfromFanaPlatformStackfanaserviceLBSecurityGroup3F47A229300142961893": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "FromPort": 3001,
    "GroupId": {
     "Fn::GetAtt": [
      "fanaserviceSG30294B9D",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "fanaserviceLBSecurityGroup1E8FAB95",
      "GroupId"
     ]
    },
    "ToPort": 3001
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fana-service-SG/from FanaPlatformStackfanaserviceLBSecurityGroup3F47A229:3001"
   }
  },
  "fanaserviceLBF1CCA530": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Name": "fana-LB",
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "fanaserviceLBSecurityGroup1E8FAB95",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Fn::ImportValue": "fana-shared-resources:ExportsOutputReffanavpcPublicSubnet1Subnet5496124ECC30E9DE"
     },
     {
      "Fn::ImportValue": "fana-shared-resources:ExportsOutputReffanavpcPublicSubnet2Subnet0CE84D659B0D89D9"
     }
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fana-service/LB/Resource"
   }
  },
  "fanaserviceLBSecurityGroup1E8FAB95": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB FanaPlatformStackfanaserviceLBAE36CF36",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "fana-shared-resources:ExportsOutputReffanavpc71F92CF5BBA8AEF7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fana-service/LB/SecurityGroup/Resource"
   }
  },
  "fanaserviceLBSecurityGrouptoFanaPlatformStackfanaserviceSG5094F012300076ADD85F": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "fanaserviceLBSecurityGroup1E8FAB95",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "fanaserviceSG30294B9D",
      "GroupId"
     ]
    },
    "FromPort": 3000,
    "ToPort": 3000
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fana-service/LB/SecurityGroup/to FanaPlatformStackfanaserviceSG5094F012:3000"
   }
  },
  "fanaserviceLBSecurityGrouptoFanaPlatformStackfanaserviceSG5094F0123001E586DB0F": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "fanaserviceLBSecurityGroup1E8FAB95",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "fanaserviceSG30294B9D",
      "GroupId"
     ]
    },
    "FromPort": 3001,
    "ToPort": 3001
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fana-service/LB/SecurityGroup/to FanaPlatformStackfanaserviceSG5094F012:3001"
   }
  },
  "fanaserviceLBPublicListener9F36CED5": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "fanaserviceLBPublicListenerECSGroupA4E8767C"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "fanaserviceLBF1CCA530"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fana-service/LB/PublicListener/Resource"
   }
  },
  "fanaserviceLBPublicListenerECSGroupA4E8767C": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Fn::ImportValue": "fana-shared-resources:ExportsOutputReffanavpc71F92CF5BBA8AEF7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fana-service/LB/PublicListener/ECSGroup/Resource"
   }
  },
  "fanaserviceLBPublicListenerbearerStreamRuleFE9C6AAE": {
   "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
   "Properties": {
    "Actions": [
     {
      "TargetGroupArn": {
       "Ref": "flagbearerTG27037E0D"
      },
      "Type": "forward"
     }
    ],
    "Conditions": [
     {
      "Field": "path-pattern",
      "PathPatternConfig": {
       "Values": [
        "/connect*",
        "/stream*"
       ]
      }
     }
    ],
    "ListenerArn": {
     "Ref": "fanaserviceLBPublicListener9F36CED5"
    },
    "Priority": 11
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fana-service/LB/PublicListener/bearerStreamRule/Resource"
   }
  },
  "fanaserviceService6A98D7CE": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Fn::ImportValue": "fana-shared-resources:ExportsOutputReffanaclusterB441A15AC8EDF09F"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "fanaManagerContainer",
      "ContainerPort": 3000,
      "TargetGroupArn": {
       "Ref": "fanaserviceLBPublicListenerECSGroupA4E8767C"
      }
     },
     {
      "ContainerName": "fanaBearerContainer",
      "ContainerPort": 3001,
      "TargetGroupArn": {
       "Ref": "flagbearerTG27037E0D"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "fanaserviceSG30294B9D",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Fn::ImportValue": "fana-shared-resources:ExportsOutputReffanavpcPrivateSubnet1Subnet5472B4A7D62B11CA"
       },
       {
        "Fn::ImportValue": "fana-shared-resources:ExportsOutputReffanavpcPrivateSubnet2Subnet5043D2161B070C6D"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "fanaServiceTaskDefinition7714E28D"
    }
   },
   "DependsOn": [
    "fanaserviceLBPublicListenerbearerStreamRuleFE9C6AAE",
    "fanaserviceLBPublicListenerECSGroupA4E8767C",
    "fanaserviceLBPublicListener9F36CED5"
   ],
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/fana-service/Service/Service"
   }
  },
  "flagbearerTG27037E0D": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 3001,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Fn::ImportValue": "fana-shared-resources:ExportsOutputReffanavpc71F92CF5BBA8AEF7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/flag-bearer-TG/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31S22rDMAz9lr273tZtsNfdGRQ20r4X1VGDGtcOtpxRgv99zqXFdGVPko4uPkfyXN7dy5sr+PEzVdYzTRvZLRlULRK07lB52b2Dq4BxBb5+xS0ZYrJGvGzNOWINAxl0GTb1LtG1pLBvmtwoCPayK6we0MF+W03q0IejF4W2VSKwsNWHs6HpM0c/ClTzxBVVcMSHU/5/4NNUDr3/g78NcD/TrxtgRme8fGqaxAJ6HQsL5TNoMArLM0mowTMpnSo2QwWZqk3MLne7UUMW53XkGc1Uc/Sz/Cq9jHxSlocXphRhXG0ex9gjX4GbwMPa0dvgxsOk85XD0aIwtkS589ft7aN8SN9j54lmLhimPcpitL/07uF+OgIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "FanaPlatformStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "fanaserviceLoadBalancerDNSD7F12FC1": {
   "Value": {
    "Fn::GetAtt": [
     "fanaserviceLBF1CCA530",
     "DNSName"
    ]
   }
  },
  "fanaserviceServiceURLF79D253E": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "fanaserviceLBF1CCA530",
        "DNSName"
       ]
      }
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}